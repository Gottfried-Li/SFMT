/**
 * \mainpage 
 *
 * This is SIMD oriented Fast Mersenne Twister pseudorandom number
 * generator(SFMT).
 *
 * This Project provides pseudorandom number generators of various
 * Mersenne Prime Period: from 2<sup>607</sup>-1 to
 * 2<sup>216091</sup>-1.
 *
 * Please check endianness in source codes carefully,
 * if you are using BIG ENDIAN.  
 *
 * - void init_gen_rand() initializes the generator with a 32-bit
 *   integer seed.
 * - void init_by_array() initializes the generator with an array of
 *   32-bit integers as the seeds.
 * - uint32_t gen_rand32() generates and returns a pseudorandom
 *   32-bit unsigned integer.
 * - uint32_t gen_rand64() generates and returns a pseudorandom
 *   64-bit unsigned integer.
 * - void fill_array32() fills the user-specified array with 32-bit
 *   pseudorandom integers.
 * - void fill_array64() fills the user-specified array with 64-bit
 *   pseudorandom integers.
 * - inline static double to_real1(uint32_t v) convert v to double on
 *   [0,1]-real-interval. 
 * - inline static double genrand_real1() generates a random number on 
 *   [0,1]-real-interval. 
 * - inline static double to_real2(uint32_t v) convert v to double on
 *   [0,1)-real-interval.
 * - inline static double genrand_real2() generates a random number on 
 *   [0,1)-real-interval.
 * - inline static double to_real3(uint32_t v) convert v to double on
 *   (0,1)-real-interval.
 * - inline static double genrand_real3() generates a random number on 
 *   (0,1)-real-interval.
 * - inline static double to_res53(uint64_t v) convert v to double on
 *   [0,1) with 53-bit resolution
 * - inline static double genrand_res53() generates a random number on 
 *   [0,1) with 53-bit resolution
 * - inline static double to_res53_mix(uint32_t x, uint32_t y) convert
 *   v to double on [0,1) with 53-bit resolution from two 32bit integers.
 * - inline static double genrand_res53_mix() generates a random
 *   number on [0,1) with 53-bit resolution using 32bit generation.
 *
 *   see <a href="howto-compile.html">How to compile</a> to compile
 *   your program with SFMT optimized for SIMD.
 * 
 * @author Mutsuo Saito (saito\@our-domain) Hiroshima University 
 * @author Makoto Matsumoto (m-mat\@our-domain) Hiroshima University
 *
 * Please change \b our-domain to \b math.sci.hiroshima-u.ac.jp
 *
 * @date 2007-08-12
 *
 * Copyright (C) 2006, 2007 Mutsuo Saito, Makoto Matsumoto and Hiroshima
 * University. All rights reserved.
 *
 * The new BSD License is applied to this software.
 * \verbinclude LICENSE.txt
 */
